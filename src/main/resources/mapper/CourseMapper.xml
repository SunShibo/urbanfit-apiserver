<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.urbanfit.apiserver.dao.CourseDao">
    <sql id="limit">
        limit #{pageOffset}, #{pageSize}
    </sql>
    <!-- 添加课程信息 -->
    <insert id="addCourse" parameterType="com.urbanfit.apiserver.entity.Course"
            useGeneratedKeys="true" keyProperty="courseId">
        insert into t_course (courseName, courseType, introduce, userId, storeId, courseImageUrl, createTime)
        values (#{courseName}, #{courseType}, #{introduce}, #{userId}, #{storeId}, #{courseImageUrl}, now())
    </insert>
    <!-- 根据课程类型查询数据 -->
    <select id="queryCourseByType" parameterType="int" resultType="com.urbanfit.apiserver.entity.Course">
        select * from t_course where courseType = #{courseType}
    </select>
    <!-- 修改课程信息 -->
    <update id="updateCourse" parameterType="com.urbanfit.apiserver.entity.Course">
        update t_course set courseName = #{courseName}, courseType = #{courseType}, userId = #{userId},
        storeId = #{storeId}, introduce = #{introduce}, coursePrice = #{coursePrice},
        courseImageUrl = #{courseImageUrl} where courseId = #{courseId}
    </update>
    <select id="queryCourseByCourseId" parameterType="int" resultType="com.urbanfit.apiserver.entity.Course">
        select * from t_course where courseId = #{courseId}
    </select>
    <select id="queryCourseList" resultType="com.urbanfit.apiserver.entity.Course">
        select * from t_course
    </select>
    <update id="updateCourseStatus" parameterType="map">
        update t_course set status = #{status} where courseId = #{courseId}
    </update>

    <select id="queryUpCourseList" resultType="com.urbanfit.apiserver.entity.Course">
        select * from t_course where status = 0
    </select>

    <select id="queryUpCourseByCourseId" parameterType="int" resultType="com.urbanfit.apiserver.entity.Course">
        select * from t_course where courseId = #{courseId} and status = 0
    </select>
    <update id="updateCoursePrice" parameterType="map">
        update t_course set coursePrice = #{coursePrice} where courseId = #{courseId}
    </update>

    <select id="queryListCourse" parameterType="map" resultType="com.urbanfit.apiserver.entity.Course">
        select * from t_course order by createTime desc
        <include refid="limit"/>
    </select>

    <select id="queryCountCourse" parameterType="map" resultType="int">
        select count(courseId) from t_course
    </select>

    <select id="queryStoreChooseCourseList" parameterType="map" resultType="com.urbanfit.apiserver.entity.Store">
        select * from t_course where status = 0
        <if test="courseIds != null">
            and courseId in
            <foreach collection="courseIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>

    <select id="queryStoreCourseCount" resultType="int" parameterType="map">
        select count(m.courseId) from (
            select * from t_course where status = 0
            <if test="courseName != null">
                and courseName like CONCAT("%", #{courseName}, "%")
            </if>
            <if test="courseType != null">
                and courseType = #{courseType}
            </if>
            <if test="courseIds != null">
                and courseId not in
                <foreach collection="courseIds" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        ) m
    </select>

    <select id="queryStoreCourseList" resultType="com.urbanfit.apiserver.entity.Course" parameterType="map">
        select * from t_course where status = 0
        <if test="courseName != null">
            and courseName like CONCAT("%", #{courseName}, "%")
        </if>
        <if test="courseType != null">
            and courseType = #{courseType}
        </if>
        <if test="courseIds != null">
            and courseId not in
            <foreach collection="courseIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        order by createTime desc
        <include refid="limit"/>
    </select>
</mapper>